[build-system]
requires = ["setuptools>=65.0", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "image-generation-workspace"
version = "1.0.0"
description = "Comprehensive AI image generation workspace with anime wallpaper remastering capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Image Generation Team", email = "team@example.com"}
]
keywords = ["ai", "image-generation", "stable-diffusion", "anime", "wallpaper", "remaster"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "diffusers>=0.21.0",
    "transformers>=4.25.0",
    "accelerate>=0.20.0",
    "Pillow>=9.0.0",
    "opencv-python>=4.6.0",
    "requests>=2.28.0",
    "tqdm>=4.64.0",
    "huggingface-hub>=0.16.0",
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.20.0",
    "pydantic>=1.10.0",
    "prometheus-client>=0.16.0",
    "structlog>=22.3.0",
    "cryptography>=39.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "isort>=5.12.0",
]
docs = [
    "mkdocs-material>=9.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-minify-plugin>=0.6.0",
    "mkdocs-mermaid2-plugin>=0.6.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "semgrep>=1.45.0",
]

[project.urls]
Homepage = "https://github.com/your-username/image-generation-workspace"
Documentation = "https://your-username.github.io/image-generation-workspace"
Repository = "https://github.com/your-username/image-generation-workspace"
Issues = "https://github.com/your-username/image-generation-workspace/issues"
Changelog = "https://github.com/your-username/image-generation-workspace/blob/main/CHANGELOG.md"

[project.scripts]
image-generation = "anime_wallpaper_remaster.cli:main"

[tool.setuptools.packages.find]
where = ["anime-wallpaper-remaster/src"]
include = ["anime_wallpaper_remaster*"]

[tool.setuptools.package-data]
"anime_wallpaper_remaster" = ["models/**/*", "assets/**/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=anime_wallpaper_remaster",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "1.0.0"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "diffusers.*",
    "transformers.*",
    "accelerate.*",
    "xformers.*",
    "cv2.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["anime_wallpaper_remaster"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
